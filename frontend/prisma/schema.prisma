datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

////////////////////////////////
//            Lucia           //
////////////////////////////////

model User {
  id           String    @id @unique
  username     String    @unique
  firstName    String
  lastName     String
  email        String    @unique
  image        String?
  settings     Settings?
  auth_session Session[]
  key          Key[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade, onUpdate: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade, onUpdate: Cascade)

  @@index([user_id])
}

////////////////////////////////
//        Scanner Data        //
////////////////////////////////

// TODO: Make it so that each class has a teacher. This will be used to determine which classes a teacher can see.
model Class {
  id       String    @id @unique @default(uuid())
  class_id String    @unique
  students Student[] 
  @@index([class_id])
}

model Student {
  id         String   @id @unique @default(uuid())
  student_id String   @unique
  firstName  String
  lastName   String
  class      Class    @relation(fields: [class_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  class_id   String

  @@index([class_id])
}

model Record {
  id         String   @id @unique @default(uuid())
  student_id String
  class_id   String
  timestamp  DateTime
  status     String
  reason     String?
  @@index([student_id])
}

////////////////////////////////
//          Settings          //
////////////////////////////////

model Settings {
  id      String @id @unique @default(uuid())
  user_id String @unique
  user    User   @relation(references: [id], fields: [user_id], onDelete: Cascade, onUpdate: Cascade)

  @@index([user_id])
}
